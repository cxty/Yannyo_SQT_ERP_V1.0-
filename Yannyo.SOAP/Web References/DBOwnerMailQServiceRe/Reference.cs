//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18449.
// 
#pragma warning disable 1591

namespace Yannyo.SOAP.DBOwnerMailQServiceRe {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBOwnerManageSOAP", Namespace="http://messagequeue.dbowner.com/DBOwnerManage/")]
    public partial class DBOwnerManage : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Auth authValueField;
        
        private System.Threading.SendOrPostCallback AddMessageTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback delMessageTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback delServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectsystemlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetsystemlogListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatesystemlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertsystemlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletesystemlogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBOwnerManage() {
            this.Url = global::Yannyo.SOAP.Properties.Settings.Default.Yannyo_SOAP_DBOwnerMailQServiceRe_DBOwnerManage;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Auth AuthValue {
            get {
                return this.authValueField;
            }
            set {
                this.authValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddMessageTaskCompletedEventHandler AddMessageTaskCompleted;
        
        /// <remarks/>
        public event SelectTaskInfoCompletedEventHandler SelectTaskInfoCompleted;
        
        /// <remarks/>
        public event UpdateTaskInfoCompletedEventHandler UpdateTaskInfoCompleted;
        
        /// <remarks/>
        public event delMessageTaskCompletedEventHandler delMessageTaskCompleted;
        
        /// <remarks/>
        public event GetMessageListCompletedEventHandler GetMessageListCompleted;
        
        /// <remarks/>
        public event AddServerCompletedEventHandler AddServerCompleted;
        
        /// <remarks/>
        public event SelectServerInfoCompletedEventHandler SelectServerInfoCompleted;
        
        /// <remarks/>
        public event UpdateServerInfoCompletedEventHandler UpdateServerInfoCompleted;
        
        /// <remarks/>
        public event delServerCompletedEventHandler delServerCompleted;
        
        /// <remarks/>
        public event GetServerListCompletedEventHandler GetServerListCompleted;
        
        /// <remarks/>
        public event SelectsystemlogCompletedEventHandler SelectsystemlogCompleted;
        
        /// <remarks/>
        public event GetsystemlogListCompletedEventHandler GetsystemlogListCompleted;
        
        /// <remarks/>
        public event UpdatesystemlogCompletedEventHandler UpdatesystemlogCompleted;
        
        /// <remarks/>
        public event InsertsystemlogCompletedEventHandler InsertsystemlogCompleted;
        
        /// <remarks/>
        public event DeletesystemlogCompletedEventHandler DeletesystemlogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/AddMessageTask", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AddMessageTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("AddMessageTask", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMessageTaskAsync(string data) {
            this.AddMessageTaskAsync(data, null);
        }
        
        /// <remarks/>
        public void AddMessageTaskAsync(string data, object userState) {
            if ((this.AddMessageTaskOperationCompleted == null)) {
                this.AddMessageTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessageTaskOperationCompleted);
            }
            this.InvokeAsync("AddMessageTask", new object[] {
                        data}, this.AddMessageTaskOperationCompleted, userState);
        }
        
        private void OnAddMessageTaskOperationCompleted(object arg) {
            if ((this.AddMessageTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessageTaskCompleted(this, new AddMessageTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/SelectTaskInfo", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SelectTaskInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("SelectTaskInfo", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectTaskInfoAsync(string data) {
            this.SelectTaskInfoAsync(data, null);
        }
        
        /// <remarks/>
        public void SelectTaskInfoAsync(string data, object userState) {
            if ((this.SelectTaskInfoOperationCompleted == null)) {
                this.SelectTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectTaskInfoOperationCompleted);
            }
            this.InvokeAsync("SelectTaskInfo", new object[] {
                        data}, this.SelectTaskInfoOperationCompleted, userState);
        }
        
        private void OnSelectTaskInfoOperationCompleted(object arg) {
            if ((this.SelectTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectTaskInfoCompleted(this, new SelectTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/UpdateTaskInfo", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdateTaskInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("UpdateTaskInfo", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskInfoAsync(string data) {
            this.UpdateTaskInfoAsync(data, null);
        }
        
        /// <remarks/>
        public void UpdateTaskInfoAsync(string data, object userState) {
            if ((this.UpdateTaskInfoOperationCompleted == null)) {
                this.UpdateTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateTaskInfo", new object[] {
                        data}, this.UpdateTaskInfoOperationCompleted, userState);
        }
        
        private void OnUpdateTaskInfoOperationCompleted(object arg) {
            if ((this.UpdateTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskInfoCompleted(this, new UpdateTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/delMessageTask", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delMessageTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("delMessageTask", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void delMessageTaskAsync(string data) {
            this.delMessageTaskAsync(data, null);
        }
        
        /// <remarks/>
        public void delMessageTaskAsync(string data, object userState) {
            if ((this.delMessageTaskOperationCompleted == null)) {
                this.delMessageTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelMessageTaskOperationCompleted);
            }
            this.InvokeAsync("delMessageTask", new object[] {
                        data}, this.delMessageTaskOperationCompleted, userState);
        }
        
        private void OndelMessageTaskOperationCompleted(object arg) {
            if ((this.delMessageTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delMessageTaskCompleted(this, new delMessageTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/GetMessageList", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetMessageList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("GetMessageList", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageListAsync(string data) {
            this.GetMessageListAsync(data, null);
        }
        
        /// <remarks/>
        public void GetMessageListAsync(string data, object userState) {
            if ((this.GetMessageListOperationCompleted == null)) {
                this.GetMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageListOperationCompleted);
            }
            this.InvokeAsync("GetMessageList", new object[] {
                        data}, this.GetMessageListOperationCompleted, userState);
        }
        
        private void OnGetMessageListOperationCompleted(object arg) {
            if ((this.GetMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageListCompleted(this, new GetMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/AddServer", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AddServer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("AddServer", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddServerAsync(string data) {
            this.AddServerAsync(data, null);
        }
        
        /// <remarks/>
        public void AddServerAsync(string data, object userState) {
            if ((this.AddServerOperationCompleted == null)) {
                this.AddServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddServerOperationCompleted);
            }
            this.InvokeAsync("AddServer", new object[] {
                        data}, this.AddServerOperationCompleted, userState);
        }
        
        private void OnAddServerOperationCompleted(object arg) {
            if ((this.AddServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddServerCompleted(this, new AddServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/SelectServerInfo", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SelectServerInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("SelectServerInfo", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectServerInfoAsync(string data) {
            this.SelectServerInfoAsync(data, null);
        }
        
        /// <remarks/>
        public void SelectServerInfoAsync(string data, object userState) {
            if ((this.SelectServerInfoOperationCompleted == null)) {
                this.SelectServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectServerInfoOperationCompleted);
            }
            this.InvokeAsync("SelectServerInfo", new object[] {
                        data}, this.SelectServerInfoOperationCompleted, userState);
        }
        
        private void OnSelectServerInfoOperationCompleted(object arg) {
            if ((this.SelectServerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectServerInfoCompleted(this, new SelectServerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/UpdateServerInfo", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdateServerInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("UpdateServerInfo", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateServerInfoAsync(string data) {
            this.UpdateServerInfoAsync(data, null);
        }
        
        /// <remarks/>
        public void UpdateServerInfoAsync(string data, object userState) {
            if ((this.UpdateServerInfoOperationCompleted == null)) {
                this.UpdateServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateServerInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateServerInfo", new object[] {
                        data}, this.UpdateServerInfoOperationCompleted, userState);
        }
        
        private void OnUpdateServerInfoOperationCompleted(object arg) {
            if ((this.UpdateServerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateServerInfoCompleted(this, new UpdateServerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/delServer", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delServer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("delServer", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void delServerAsync(string data) {
            this.delServerAsync(data, null);
        }
        
        /// <remarks/>
        public void delServerAsync(string data, object userState) {
            if ((this.delServerOperationCompleted == null)) {
                this.delServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelServerOperationCompleted);
            }
            this.InvokeAsync("delServer", new object[] {
                        data}, this.delServerOperationCompleted, userState);
        }
        
        private void OndelServerOperationCompleted(object arg) {
            if ((this.delServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delServerCompleted(this, new delServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/GetServerList", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetServerList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("GetServerList", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerListAsync(string data) {
            this.GetServerListAsync(data, null);
        }
        
        /// <remarks/>
        public void GetServerListAsync(string data, object userState) {
            if ((this.GetServerListOperationCompleted == null)) {
                this.GetServerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerListOperationCompleted);
            }
            this.InvokeAsync("GetServerList", new object[] {
                        data}, this.GetServerListOperationCompleted, userState);
        }
        
        private void OnGetServerListOperationCompleted(object arg) {
            if ((this.GetServerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerListCompleted(this, new GetServerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/Selectsystemlog", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Selectsystemlog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("Selectsystemlog", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectsystemlogAsync(string data) {
            this.SelectsystemlogAsync(data, null);
        }
        
        /// <remarks/>
        public void SelectsystemlogAsync(string data, object userState) {
            if ((this.SelectsystemlogOperationCompleted == null)) {
                this.SelectsystemlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectsystemlogOperationCompleted);
            }
            this.InvokeAsync("Selectsystemlog", new object[] {
                        data}, this.SelectsystemlogOperationCompleted, userState);
        }
        
        private void OnSelectsystemlogOperationCompleted(object arg) {
            if ((this.SelectsystemlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectsystemlogCompleted(this, new SelectsystemlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/GetsystemlogList", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetsystemlogList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("GetsystemlogList", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetsystemlogListAsync(string data) {
            this.GetsystemlogListAsync(data, null);
        }
        
        /// <remarks/>
        public void GetsystemlogListAsync(string data, object userState) {
            if ((this.GetsystemlogListOperationCompleted == null)) {
                this.GetsystemlogListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetsystemlogListOperationCompleted);
            }
            this.InvokeAsync("GetsystemlogList", new object[] {
                        data}, this.GetsystemlogListOperationCompleted, userState);
        }
        
        private void OnGetsystemlogListOperationCompleted(object arg) {
            if ((this.GetsystemlogListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetsystemlogListCompleted(this, new GetsystemlogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/Updatesystemlog", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Updatesystemlog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("Updatesystemlog", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatesystemlogAsync(string data) {
            this.UpdatesystemlogAsync(data, null);
        }
        
        /// <remarks/>
        public void UpdatesystemlogAsync(string data, object userState) {
            if ((this.UpdatesystemlogOperationCompleted == null)) {
                this.UpdatesystemlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatesystemlogOperationCompleted);
            }
            this.InvokeAsync("Updatesystemlog", new object[] {
                        data}, this.UpdatesystemlogOperationCompleted, userState);
        }
        
        private void OnUpdatesystemlogOperationCompleted(object arg) {
            if ((this.UpdatesystemlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatesystemlogCompleted(this, new UpdatesystemlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/Insertsystemlog", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Insertsystemlog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("Insertsystemlog", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertsystemlogAsync(string data) {
            this.InsertsystemlogAsync(data, null);
        }
        
        /// <remarks/>
        public void InsertsystemlogAsync(string data, object userState) {
            if ((this.InsertsystemlogOperationCompleted == null)) {
                this.InsertsystemlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertsystemlogOperationCompleted);
            }
            this.InvokeAsync("Insertsystemlog", new object[] {
                        data}, this.InsertsystemlogOperationCompleted, userState);
        }
        
        private void OnInsertsystemlogOperationCompleted(object arg) {
            if ((this.InsertsystemlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertsystemlogCompleted(this, new InsertsystemlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://messagequeue.dbowner.com/DBOwnerManage/Deletesystemlog", RequestNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", ResponseNamespace="http://messagequeue.dbowner.com/DBOwnerManage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deletesystemlog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string data) {
            object[] results = this.Invoke("Deletesystemlog", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletesystemlogAsync(string data) {
            this.DeletesystemlogAsync(data, null);
        }
        
        /// <remarks/>
        public void DeletesystemlogAsync(string data, object userState) {
            if ((this.DeletesystemlogOperationCompleted == null)) {
                this.DeletesystemlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletesystemlogOperationCompleted);
            }
            this.InvokeAsync("Deletesystemlog", new object[] {
                        data}, this.DeletesystemlogOperationCompleted, userState);
        }
        
        private void OnDeletesystemlogOperationCompleted(object arg) {
            if ((this.DeletesystemlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletesystemlogCompleted(this, new DeletesystemlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://messagequeue.dbowner.com/DBOwnerManage/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://messagequeue.dbowner.com/DBOwnerManage/", IsNullable=false)]
    public partial class Auth : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMessageTaskCompletedEventHandler(object sender, AddMessageTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMessageTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMessageTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectTaskInfoCompletedEventHandler(object sender, SelectTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateTaskInfoCompletedEventHandler(object sender, UpdateTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void delMessageTaskCompletedEventHandler(object sender, delMessageTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delMessageTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal delMessageTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageListCompletedEventHandler(object sender, GetMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddServerCompletedEventHandler(object sender, AddServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectServerInfoCompletedEventHandler(object sender, SelectServerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateServerInfoCompletedEventHandler(object sender, UpdateServerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void delServerCompletedEventHandler(object sender, delServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal delServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetServerListCompletedEventHandler(object sender, GetServerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectsystemlogCompletedEventHandler(object sender, SelectsystemlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectsystemlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectsystemlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetsystemlogListCompletedEventHandler(object sender, GetsystemlogListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetsystemlogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetsystemlogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdatesystemlogCompletedEventHandler(object sender, UpdatesystemlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatesystemlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatesystemlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertsystemlogCompletedEventHandler(object sender, InsertsystemlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertsystemlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertsystemlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeletesystemlogCompletedEventHandler(object sender, DeletesystemlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletesystemlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletesystemlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591